<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2014-10-31 11:59"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>luizrobertofreitas</title>
<link>http://luizrobertofreitas.wordpress.com</link>
<description>...</description>
<pubDate>Fri, 31 Oct 2014 11:59:17 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://luizrobertofreitas.wordpress.com</wp:base_blog_url>
<wp:wp_author>
  <wp:author_login>luizrobertofreitas</wp:author_login>
  <wp:author_email>luizrobertofreitas@yahoo.com.br</wp:author_email>
  <wp:author_display_name><![CDATA[luizrobertofreitas]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:wp_author>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title> &#187; luizrobertofreitas</title>
		<link>http://luizrobertofreitas.wordpress.com</link>
	</image>
	<item>
  <title>Oracle ADF javaScript API</title>
  <link>http://luizrobertofreitas.wordpress.com/2011/05/31/oracle-adf-javascript-api/</link>
  <pubDate>Tue, 31 May 2011 18:33:41 +0000</pubDate>
  <dc:creator>luizrobertofreitas</dc:creator>
  <guid isPermaLink="false">http://luizrobertofreitas.wordpress.com/?p=4</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://download.oracle.com/otn_hosted_doc/jdeveloper/11gdemos/adf-insider-javascript/adf-insider-javascript.html">http://download.oracle.com/otn_hosted_doc/jdeveloper/11gdemos/adf-insider-javascript/adf-insider-javascript.html</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2011-05-31 18:33:41</wp:post_date>
  <wp:post_date_gmt>2011-05-31 18:33:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>oracle-adf-javascript-api</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="adf-javascript-api"><![CDATA[ADF JavaScript API]]></category>
  <category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[23367135]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_da1d93bee3aecb1e9440ed224ec2496f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Instalando e configurando: Passenger + Apache2 + Rails 3.2.8 + Ubuntu 11.10</title>
  <link>http://luizrobertofreitas.wordpress.com/2012/10/06/instalando-e-configurando-passenger-apache2-rails-3-2-8-ubuntu-11-10/</link>
  <pubDate>Sat, 06 Oct 2012 05:23:49 +0000</pubDate>
  <dc:creator>luizrobertofreitas</dc:creator>
  <guid isPermaLink="false">http://luizrobertofreitas.wordpress.com/?p=12</guid>
  <description/>
  <content:encoded><![CDATA[Após desenvolver muitas aplicações (testes, rsrs) e rodar em ambiente de development, alcancei um ponto crucial em todo o processo de desenvolvimento de software: <strong>Como é que eu vou colocar isso em produção??</strong>

Bom, pesquisei um pouco, lí vários posts, algumas documentações, recomendações (<strong><a href="http://rubyonrails.com.br/deploy">aqui</a></strong>), e, finalmente encontrei algo sobre o <strong><a href="https://www.phusionpassenger.com/download">Phusion Passenger</a></strong>.

Não entrarei no mérito comparativo entre o <strong>Passenger</strong> e o <strong>Mongrel</strong> ou de qualquer outro tipo. A questão aqui, é: apenas documentar o procedimento que realizei para configurar o <strong>Passenger</strong> com o <strong>Apache2</strong> no <strong>Ubuntu 11.10</strong> e mandar bala na aplicação em modo de produção.

Neste pequeno e modesto tutorial, é necessário a utilização do <a href="https://rvm.io/gemsets/basics/"><strong>RVM</strong></a>

Sem mais "delongas", seguem os passos:
<ul>
	<li>Abra o arquivo "<strong>Gemfile</strong>" e coloque a <strong>gem</strong> do <strong>Passenger</strong></li>
</ul>
<p style="padding-left:60px;"><strong>gem 'passenger'</strong></p>
<p style="padding-left:60px;">Não se esqueça de rodar "<strong>bundle install</strong>" para instalar a gem configurada</p>

<ul>
	<li>Abra o terminal do ubuntu e instale o <strong>Passenger Apache2 Module</strong>. Siga os passo conforme são mostrados no terminal.</li>
</ul>
<p style="padding-left:60px;"><strong>rvmsudo passenger-install-apache2-module</strong></p>

<ul>
	<li>Localize o arquivo: "<strong>apache2.conf</strong>", no meu caso, está em: "<strong>/etc/apache2/apache2.conf</strong>"; inclua as linhas abaixo (Recomendação obtida a partir das informações da instalação realizada no passo acima).</li>
</ul>
<p style="padding-left:60px;"><strong>LoadModule passenger_module /{user_home}/.rvm/gems/ruby-1.9.3-p194/gems/passenger-3.0.17/ext/apache2/mod_passenger.so</strong>
<strong> PassengerRoot /<strong>{user_home}/</strong>.rvm/gems/ruby-1.9.3-p194/gems/passenger-3.0.17</strong>
<strong> PassengerRuby /<strong>{user_home}/</strong>.rvm/wrappers/ruby-1.9.3-p194/ruby</strong></p>

<ul>
	<li>Crie um novo <strong>VirtualHost</strong> no arquivo de configuração do <strong>Apache2</strong>: "<strong>default</strong>", no meu caso, localizado em: "<strong>/etc/apache2/sites-available/default</strong>".</li>
</ul>
<p style="padding-left:60px;">&lt;VirtualHost *:80&gt;
ServerName <strong>www.yourhost.com # Utilize o nome do seu domínio</strong>
<strong> # !!! Be sure to point DocumentRoot to 'public'!</strong>
DocumentRoot /somewhere/public  <strong># Aqui precisa ser /{RAILS_APP}/public</strong>
&lt;Directory /somewhere/public&gt; <strong># Aqui precisa ser /{RAILS_APP}/public</strong>
# This relaxes Apache security settings.
AllowOverride all
# MultiViews must be turned off.
Options -MultiViews
&lt;/Directory&gt;
&lt;/VirtualHost&gt;</p>

<ul>
	<li>Após configurações, rode o seguinte comando, para reiniciar o <strong>Apache2</strong>:</li>
</ul>
<p style="padding-left:60px;"><strong>sudo service apache2 restart</strong></p>

<ul>
	<li>Se o <strong>Apache2</strong> foi reiniciado com sucesso, acesse a URL configurada no <strong>VirtualHost</strong>. Obs: não informe a porta, pois, o <strong>Apache2</strong> está utilizando a porta 80 para redirecionar para o <strong>VirtualHost</strong>.</li>
</ul>
<ul>
	<li>Caso ocorra algum erro, você pode verificar o <strong>log</strong> localizado em "<strong>/{RAILS_APP}/logs/production.log</strong>". No meu caso, tive problemas com a seguinte linha no arquivo: "<strong>/{RAILS_APP}/config/environments/production.rb</strong>"</li>
</ul>
<p style="padding-left:60px;">mude de:</p>
<p style="padding-left:60px;">config.assets.compile = false</p>
<p style="padding-left:60px;">para</p>
<p style="padding-left:60px;">config.assets.compile = true</p>

<ul>
	<li>Caso tenha problemas, como mencionado no passo anterior, reinicie o <strong>Apache2, </strong>conforme o passo <strong>5</strong>.</li>
</ul>
Bom... foi somente isso que fiz para ter a aplicação rodando em modo de produção. Gostaria de ressaltar que não realizei nenhuma configuração para otimização de performance, não utilizei nenhuma configuração para configurar cache de arquivos estáticos no <strong>Apache2</strong>. Como disse anteriormente, o intuito é somente documentar a integração do <strong>Passenger</strong> com o <strong>Apache2</strong> para rodar aplicações <strong>Rails</strong> em modo de produção.

Obrigado!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2012-10-06 05:23:49</wp:post_date>
  <wp:post_date_gmt>2012-10-06 05:23:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>instalando-e-configurando-passenger-apache2-rails-3-2-8-ubuntu-11-10</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="apache2"><![CDATA[Apache2]]></category>
  <category domain="category" nicename="passenger"><![CDATA[Passenger]]></category>
  <category domain="category" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="category" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[23367135]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[Luan Mateus]]></wp:comment_author>
    <wp:comment_author_email>luan@luanmateus.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.luanmateus.com</wp:comment_author_url>
    <wp:comment_author_IP>177.68.238.168</wp:comment_author_IP>
    <wp:comment_date>2012-10-07 14:40:46</wp:comment_date>
    <wp:comment_date_gmt>2012-10-07 14:40:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Primeiro post do blog!! \o/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1349620847.723824024200439453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"luanmateus";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1349631305</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1349631306.579125881195068359375;s:7:"message";s:57:"luizrobertofreitas changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:18:"luizrobertofreitas";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-07 14:40:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Zoom em gráfico do JavaFx 2</title>
  <link>http://luizrobertofreitas.wordpress.com/2013/08/25/zoom-em-grafico-do-javafx-2/</link>
  <pubDate>Sun, 25 Aug 2013 22:31:50 +0000</pubDate>
  <dc:creator>luizrobertofreitas</dc:creator>
  <guid isPermaLink="false">http://luizrobertofreitas.wordpress.com/?p=20</guid>
  <description/>
  <content:encoded><![CDATA[Pessoal, estive estudando gráficos do JavaFx e uma das funcionalidades que eu precisava num gráfico era o zoom com scroll do mouse.

Disponibilizei o código fonte como um Gist em <a title="http://gist.github.com/luizrobertofreitas/6336657" href="http://gist.github.com/luizrobertofreitas/6336657">http://gist.github.com/luizrobertofreitas/6336657</a>.

Não tem muito o que explicar, exceto que, na linha 45 é necessário definir o autoRanging como false para o Axis que você deseja manipular pelo evento do scroll, conforme segue abaixo:
<blockquote>xAxis.setAutoRanging(false);</blockquote>
Do resto, é só compilar e rodar!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2013-08-25 22:31:50</wp:post_date>
  <wp:post_date_gmt>2013-08-25 22:31:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>zoom-em-grafico-do-javafx-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[23367135]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails 4 - Many to Many Associations</title>
  <link>http://luizrobertofreitas.wordpress.com/?p=33</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>luizrobertofreitas</dc:creator>
  <guid isPermaLink="false">http://luizrobertofreitas.wordpress.com/?p=33</guid>
  <description/>
  <content:encoded><![CDATA[Neste post, veremos como trabalhar com associações many to many. Por mais simples que as aplicações possam parecer, sempre nos deparamos com uma situação dessas quando trabalhamos com bancos de dados relacionais.

Antes de começar, preciso mostrar a fonte de onde aprendi as técnicas para trabalhar com many to many e como construir formulários.

No <a title="Rails Guides" href="http://guides.rubyonrails.org/association_basics.html" target="_blank">Rails Guides</a>, são demonstradas algumas técnicas. Aqui, vou demonstrar 2 formas: com has_and_belongs_to_many e has_many :through
<ol>
	<li>Primeiramente, vamos ver como desenvolver utilizando o has_and_belongs_to_many. Veja os models: Users e Roles</li>
</ol>
class User &lt; ActiveRecord::Base
has_and_belongs_to_many :roles
end]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>33</wp:post_id>
  <wp:post_date>2014-08-19 12:59:24</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[23367135]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
